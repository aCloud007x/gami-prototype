using UnityEngine;
using System.Collections;

public class bubble_controller : MonoBehaviour
{
	public int eachGiveScore = 0;
	public bubble_ui thisUI;
	//	public Transform secondObj = null, firstObj = null;
	//var for do moving motions
	private Vector3 Snode, curOr;
	float stepSpd = 2f;
	int curInt = 0;
	public int maxCur = 0;
	public GameObject[] oranges;

	// Use this for initialization
	void Start ()
	{
	
	}
	
	// Update is called once per frame
	void Update ()
	{
		if (thisUI.isGameUIOver)
			return;
		if (curInt >= maxCur) {
			if (maxCur < 0) {
				thisUI.isGameUIOver = true;
				Debug.Log ("END");
				oranges [0].transform.tag = "sorted";
				oranges [1].transform.tag = "sorted";
				return;
			}
			oranges [maxCur].transform.tag = "sorted";
			thisUI.incScore (eachGiveScore);
			curInt = 0;
			maxCur--;

		}
		bubbleSort ();
	}

	void Awake ()
	{
//		sortOranges ();
	}

	void bubbleSort ()
	{
		GameObject temp;
		bool locke = false, locke2 = false;
		locke = clickDetech (); //ตรวจสอบการคลิก ถ้าคลิกตัวซ้ายจริงๆ TRUE
		locke2 = clickDetech2 ();
		Debug.Log ("curConsider f=" + oranges [curInt].GetComponent <orangeValue> ().value + " s=" + oranges [curInt + 1].GetComponent <orangeValue> ().value);
		oranges [curInt].transform.tag = "onsort";
		oranges [curInt + 1].transform.tag = "onsort"; //เปลี่ยนให้แท็กสองอันเป็นกำลังพิจารณา
		if (locke) {
			//ถ้าเกิดว่ามีการคลิกทางซ้ายจริงๆ
			if (oranges [curInt].GetComponent <orangeValue> ().value > oranges [curInt + 1].GetComponent <orangeValue> ().value) {
				//เปรียบเทียบค่า ตัวซ้าย มากกว่า ตัวขวา --> ตัวขวาน้อยกว่า --> สลับ
				//เข้ามาในนี้แสดงว่า จะจัดเรียง !!
				oranges [curInt].transform.tag = "unsort";
				oranges [curInt + 1].transform.tag = "unsort"; //เปลี่ยนแท็คกลับคืน จะได้ไม่สับสนกับถาดอื่น
				Debug.Log ("swaping");
				//
				//  สลับที่ซ้าย ขวา     curInt จะเลื่อนไปขวา // curInt+1 จะเลื่อนไปซ้าย 
				//  
				temp = oranges [curInt + 1]; //สลับที่
				oranges [curInt + 1] = oranges [curInt];
				oranges [curInt] = temp;
				// START do move
				// do move to LEFT
				Vector3 curOr = oranges [curInt + 1].transform.position;
				oranges [curInt + 1].GetComponent <orangeValue> ().curPos = curOr;
				oranges [curInt + 1].GetComponent <orangeValue> ().ismoveToRight = true;
				// do move to RIGHT
				curOr = oranges [curInt].transform.position;
				oranges [curInt].GetComponent <orangeValue> ().curPos = curOr;
				oranges [curInt].GetComponent <orangeValue> ().ismoveToLeft = true;
				// END do move
				Debug.Log ("now New f=" + oranges [curInt].GetComponent <orangeValue> ().value + " s=" + oranges [curInt + 1].GetComponent <orangeValue> ().value);
				curInt++;
				locke = false;
			} else {
				//ถ้าเกิดว่าคลิกจริงๆ แต่มันไม่ต้องสลับ แสดงว่าผิด
				//ดังนั้น ต้องเอาอันนี้ออก แล้ว
				//set Losing Heart  ไม่ค้องบวก
				thisUI.theHeart.LosingHeart ();
			}
		} else if (locke2 && !locke) {
			if (oranges [curInt].GetComponent <orangeValue> ().value < oranges [curInt + 1].GetComponent <orangeValue> ().value) {
				// --> ตัวขวามากกว่า ไม่ต้องสลับ ผู้ใช้กดตัวขวา
				//แสดงว่า ผู้ใช้กดถูกต้อง
				oranges [curInt].transform.tag = "unsort";
				oranges [curInt + 1].transform.tag = "unsort";
				curInt++;
			} else {
				//ไม่ต้องสลับ แสดงว่ากดผิด
				//set Losing Heart  ไม่ค้องบวก
				thisUI.theHeart.LosingHeart ();
			}
		}
	}

	bool clickDetech ()
	{
		bool res = false;
		if (Input.GetMouseButtonDown (0)) {
			Vector2 ray = Camera.main.ScreenToWorldPoint (Input.mousePosition);
			RaycastHit2D hit = Physics2D.Raycast (ray, Vector2.zero);
			if (hit) {
				if (hit.transform.tag == "onsort" && hit.transform == oranges [curInt].transform) {
					res = true;
					Debug.Log ("is click LEFT");
				}
			}
		}
		return res;
	}

	bool clickDetech2 ()
	{
		bool res = false;
		if (Input.GetMouseButtonDown (0)) {
			Vector2 ray = Camera.main.ScreenToWorldPoint (Input.mousePosition);
			RaycastHit2D hit = Physics2D.Raycast (ray, Vector2.zero);
			if (hit) {
				if (hit.transform.tag == "onsort" && hit.transform == oranges [curInt + 1].transform) {
					res = true;
					Debug.Log ("is click RIGHT");
				}
			}
		}
		return res;
	}

	/*void sortOranges ()
	{
		GameObject temp;
		bool flag = true;

		for (int outer = 0; outer < oranges.Length && flag; outer++) {
			flag = false;
			for (int sort = 0; sort < oranges.Length - 1; sort++) {
				Debug.Log ("Consider -- " + oranges [sort].GetComponent <orangeValue> ().value + " <==> " + oranges [sort + 1].GetComponent <orangeValue> ().value);
				//ถ้าตัวแรกมากกว่าตัวที่สอง -->ให้สลับ
				if (oranges [sort].GetComponent <orangeValue> ().value > oranges [sort + 1].GetComponent <orangeValue> ().value) {
					Debug.Log (oranges [sort].GetComponent <orangeValue> ().value + " <==> " + oranges [sort + 1].GetComponent <orangeValue> ().value);
					temp = oranges [sort + 1];
					oranges [sort + 1] = oranges [sort];
					oranges [sort] = temp;
					flag = true;
				} 
			} 
		}
	}*/
}
